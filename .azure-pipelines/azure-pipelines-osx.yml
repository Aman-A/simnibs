variables:
  Agent.Source.Git.ShallowFetchDepth: 5

trigger:
- norm_opt

jobs:
- job: Build
  pool:
    vmImage: 'macOS-10.14'
    maxParallel: 4

  steps:
  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
      sudo chown -R $USER $CONDA
    displayName: Add conda to PATH
  - bash: |
      conda env create -f environment_macOS.yml
    displayName: Create Conda environment
  - bash: |
      source activate simnibs_env
      export MACOSX_DEPLOYMENT_TARGET=10.9
      python setup.py bdist_wheel
      pip install jinja2 conda-pack
      python packing/pack.py dist/
      cp dist/* $(Build.ArtifactStagingDirectory)
      cp environment_macOS.yml $(Build.ArtifactStagingDirectory)
      cp simnibs_installer_macos.pkg  $(Build.ArtifactStagingDirectory)
    displayName: Build SimNIBS
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: mac_os
    displayName: Publish Artifact

- job: Test
  dependsOn: Build
  strategy:
    matrix:
      MacOSX-10.14:
        vmImage: 'macOS-10.14'

  pool:
    vmImage: $(vmImage)
    maxParallel: 4

  steps:
  - checkout: none
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'mac_os'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: Download SimNIBS

  - bash: |
      installer -pkg $(System.ArtifactsDirectory)/mac_os/simnibs_installer_macos.pkg -target CurrentUserHomeDirectory
      ~/Applications/SimNIBS*/bin/simnibs_python -m pytest ~/Applications/SimNIBS*/simnibs_env/lib/python*/site-packages/simnibs --junit-xml=test-results.xml
    displayName: Install SimNIBS and run unit tests
 
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: 'test-results.xml'
      testRunTitle: 'Publish test results'
      
# If everything went fine, we upload the wheel as a draft to GitHub
- job: Release
  dependsOn: Test
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - checkout: none
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'mac_os'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: Download Wheel

  - task: GithubRelease@0
    displayName: Edit GitHub Release
    inputs: 
      gitHubConnection: guilhermebs # I use my connection because github does not generate OAuth token for organizations
      repositoryName: simnibs/simnibs
      action: edit
      tag: dev
      assets: $(System.ArtifactsDirectory)/mac_os/*
      assetUploadMode: 'replace'
      isDraft: true
